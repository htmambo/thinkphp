<?php
// +----------------------------------------------------------------------
// | ThinkPHP [ WE CAN DO IT JUST THINK IT ]
// +----------------------------------------------------------------------
// | Copyright (c) 2006-2014 http://thinkphp.cn All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: liu21st <liu21st@gmail.com>
// +----------------------------------------------------------------------

namespace Think\Console\Command\Make;

use Think\Console\Command\Make;
use Think\Console\Input;
use Think\Console\Input\Argument;
use Think\Console\Output;

class Command extends Make
{
    protected $type = "Command";

    protected function configure()
    {
        parent::configure();
        $this->setName('make:command')
             ->addArgument('commandName', Argument::OPTIONAL, "The name of the command")
             ->setDescription('Create a new command class');
    }

    protected function buildClass($name)
    {
        $commandName = $this->input->getArgument('commandName') ?: strtolower(basename($name));
        $namespace   = trim(implode('\\', array_slice(explode('\\', $name), 0, -1)), '\\');

        $class = str_replace($namespace . '\\', '', $name);
        $stub  = file_get_contents($this->getStub());

        return str_replace(
            ['{%commandName%}', '{%className%}', '{%namespace%}'],
            [$commandName, $class, $namespace],
            $stub
        );
    }

    protected function getStub()
    {
        return __DIR__ . DIRECTORY_SEPARATOR . 'stubs' . DIRECTORY_SEPARATOR . 'command.stub';
    }

    protected function getModuleName()
    {
        return 'Command';
    }

    protected function execute(Input $input, Output $output)
    {
        parent::execute($input, $output); // TODO: Change the autogenerated stub

        $urlCase = C('URL_CASE_INSENSITIVE');
        // 需要回填配置文件
        $name      = trim($input->getArgument('name'));
        $classname = $this->getClassName($name);
        $pathname  = $this->getPathName($classname);
        $output->writeln('用户输入的名称：' . $name);
        $output->writeln('生成的文件名：' . $pathname);
        $output->writeln('生成的类名：' . $classname);
        $cfgFile = C('CONF_PATH') . '/command.php';
        if (!is_file($cfgFile)) {
            file_put_contents($cfgFile, '<' . '?' . 'php' . "\r\nreturn array();");
        }
        $cfg                                       = require $cfgFile;
        if($urlCase) {
            $name = strtolower($name);
        }
        $cfg[str_replace(['/', '\\'], ':', $name)] = $classname;
        file_put_contents(C('CONF_PATH') . '/command.php', '<' . '?php' . PHP_EOL . 'return ' . var_export($cfg, 1) . ';');
    }
}
